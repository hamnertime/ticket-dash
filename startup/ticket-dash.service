[Unit]
Description=Ticket Dash Flask Application
After=network.target
# If your ticket_watcher.py also needs to run as a service and gui.py depends on it,
# you might add:
# Wants=ticket-watcher.service
# After=network.target ticket-watcher.service

[Service]
User=integotec
Group=integotec # Assuming 'integotec' is also the group
WorkingDirectory=/home/integotec/ticket-dash

# The command to start your application
# If using a virtualenv: /usr/bin/authbind --deep /home/integotec/ticket-dash/pyenv/bin/python3 /home/integotec/ticket-dash/gui.py
ExecStart=/usr/bin/authbind --deep python3 /home/integotec/ticket-dash/gui.py

# Restart policy
Restart=always
RestartSec=10

# Standard output and error logging
StandardOutput=journal
StandardError=journal

# Security hardening (optional, but good practice)
PrivateTmp=true
ProtectSystem=full
NoNewPrivileges=true
# Your gui.py currently uses "./tickets", so it would write to /home/integotec/ticket-dash/tickets
# It also reads cert.pem, key.pem, agents.txt, requesters.txt from the WorkingDirectory.
# It reads from ./tickets
ReadWritePaths=/home/integotec/ticket-dash/tickets
ReadOnlyPaths=/home/integotec/ticket-dash/cert.pem /home/integotec/ticket-dash/key.pem /home/integotec/ticket-dash/agents.txt /home/integotec/ticket-dash/requesters.txt /home/integotec/ticket-dash/token.txt

[Install]
WantedBy=multi-user.target
