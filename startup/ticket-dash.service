[Unit]
Description=Ticket Dash Flask Application
After=network.target
# If your ticket_watcher.py also needs to run as a service and main.py depends on it,
# you might add:
# Wants=ticket-watcher.service
# After=network.target ticket-watcher.service

[Service]
User=integotec
# IMPORTANT: Verify 'integotec' is the correct primary group for the 'integotec' user.
# Use 'id integotec' to check, and update if different.
Group=integotec
WorkingDirectory=/home/integotec/ticket-dash

# The command to start your application
# If using a virtualenv: /usr/bin/authbind --deep /home/integotec/ticket-dash/pyenv/bin/python3 /home/integotec/ticket-dash/main.py
ExecStart=/usr/bin/authbind --deep python3 /home/integotec/ticket-dash/main.py

# Restart policy
Restart=always
RestartSec=10

# Standard output and error logging
StandardOutput=journal
StandardError=journal

# Security hardening (TEMPORARILY COMMENTED OUT FOR TESTING)
# PrivateTmp=true
# ProtectSystem=full
# NoNewPrivileges=true
# ReadWritePaths=/home/integotec/ticket-dash/tickets
# ReadOnlyPaths=/home/integotec/ticket-dash/cert.pem /home/integotec/ticket-dash/key.pem /home/integotec/ticket-dash/agents.txt /home/integotec/ticket-dash/requesters.txt /home/integotec/ticket-dash/token.txt

[Install]
WantedBy=multi-user.target
